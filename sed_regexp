Кронтаб:
Закоментировать

#поставить символ # в начало строки, содержащей текст:
sed -i '/текст/s/^/#/' файл

#убрать символы # в начале строки, содержащей текст:
sed -i '/текст/s/^#\+//' файл

#поставить символ # в начало строки, содержащей текст, и начинающейся не с символа #:
sed -i '/^[^#].*текст/s/^/#/' файл

#Найти всё, что 1) Начинается на 1)# 2)Len 3)sm -> и НЕ коментировать это (!s), остальное закоментить
sed -i '/\(^#\|len\|sm\)/!s/^/#/' mycron


----------
#Убрать одну звёздочку вначале, если вначале стоит 2 звёздочки:
cat mycron | sed '/^#\{2\}.*/s/^#//'

#Убрать одну звёздочку вначале, если вначале стоит 2 звёздочки ИЛИ звёздочка пробел звёздочка:
sed -i '/\(^#\{2\}\|^# #\).*/s/^#//'

#Найти и заменить, добавить перенос строки после <NN>
sed 's/<NN>/<NN>\n/g'

#Найти все строки, где ран.сш повторяется 2 раза и заменить "ран.сш" на "ран.сш \n"
cat mycron | sed '/.*run.sh.*run.sh/s/run.sh/run.sh \n/g'

#Найти строки с повторением паттерна с ран.сш 2 раза и более и заменить "ран.сш" на "ран.сш \n".
ЗЫ: тоже самое, что и выше, но есть квантификатор - можно указать. сколько раз должен повторяться паттерн
cat mycron |  sed '/\([0-9].*\(run.sh\)\)\{2,\}/s/run.sh/run.sh \n/g'

#попытка расставить ентеры после ран.сш через обращение к найденному паттерну \1
cat mycron | sed 's/\(\(\(^[0-9]*\)\|\(^#\)\|\(^*\)\).*\(cd \/\).*\(run.sh\)\)/\1 +++/g'

------------
#Вначале не три звёздочки
cat mycron | grep -e "^[^\(\*\*\*\)]"

#Найти всё, что не имеет в выборке одной и более звёзд
cat mycron | grep -e "^[\(\*\+)]"


--------
#Найти совпадение по шаблону и добавить звёздочку вконце строки.
Ps: 
1_ при использовании это функции текст для поиска должен быть в скобках (даже есkb это просто "123")
2_ Ентеры добавляет после каждого совпадения по шаблону 
sed 's/\(\*\)/\1 \n/g' - добавит ентер после каждой звёздочки


sed 's/^\([0-9]*\)/\1 */g'
sed 's/^\([0-9]*\)/\1\n/g'

--------------
regexp

#Не повторяется шаблон 2 раза, но есть ран.сш
^(?!([0-9].*(run.sh)){2,}).*run.*$

#Много исклюений
^(?!.*test.*)(?!.*sm.*)(?!.*bet.*).*per.*$

